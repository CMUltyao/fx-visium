#day0 HD 60um
###安装最新版seurat读取
install.packages("Seurat")
localdir <- "/Users/ltyao/Desktop/Visvium fx/day0/HD young/HD/square_060um/"
pbmcsca0 <- Load10X_Spatial(data.dir = localdir) ## bin.size = c(8, 16)

pbmcsca0[['imagerow']] <- as.data.frame(pbmcsca0@images[["slice1"]]@boundaries[["centroids"]]@coords)$x

pbmcsca0[['imagecol']] <- as.data.frame(pbmcsca0@images[["slice1"]]@boundaries[["centroids"]]@coords)$y

left0 <- subset(pbmcsca0, imagecol > 7800 & imagecol < 25000)
right0 <- subset(pbmcsca0, imagecol > 0 & imagecol < 7700, invert = )

SpatialDimPlot(pbmcsca0, label = F, label.size = 5,crop =T , repel = T,pt.size.factor = 1.5,
               cols = ,group.by = ,alpha = 0)

left0$merge<-"left0"
left0$day<-"day0"
right0$merge<-"right0"
right0$day<-"day0"
save.image("/Users/ltyao/scRNA_seq_file/day0.RData")


### day 5 data
###安装seurat4.4.0版本读取
remotes::install_version("Seurat", "4.4.0", repos = c("https://satijalab.r-universe.dev", getOption("repos")))
### re-start R studio
library("Seurat")
load("/Users/ltyao/scRNA_seq_file/day0.RData")

ima<-ReaSeuratima<-Read10X_Image("/Users/ltyao/Desktop/Visvium fx/day5/spatial")
ima@coordinates[["tissue"]] <- as.integer(ima@coordinates[["tissue"]])
ima@coordinates[["row"]] <- as.integer(ima@coordinates[["row"]])
ima@coordinates[["col"]] <- as.integer(ima@coordinates[["col"]])
ima@coordinates[["imagerow"]] <- as.integer(ima@coordinates[["imagerow"]])
ima@coordinates[["imagecol"]] <- as.integer(ima@coordinates[["imagecol"]])

pbmcsca5<-Load10X_Spatial(
  "/Users/ltyao/Desktop/Visvium fx/day5/spatial",
  filename = "filtered_feature_bc_matrix.h5",
  assay = "Spatial",
  slice = "day5",
  filter.matrix = TRUE,
  to.upper = FALSE,
  image = ima,
)


#pbmcsca5 <- SCTransform(pbmcsca5, assay = "Spatial", verbose = FALSE)
spatial5<-pbmcsca5
spatial5[['imagerow']] <- spatial5@images[["day5"]]@coordinates[["imagerow"]]
spatial5[['imagecol']] <- spatial5@images[["day5"]]@coordinates[["imagecol"]]
left5 <- subset(spatial5, imagecol > 0 & imagecol < 2500)
right5 <- subset(spatial5, imagecol > 0 & imagecol < 2500, invert = TRUE)
left5$merge<-"left5"
left5$day<-"day5"
right5$merge<-"right5"
right5$day<-"day5"

SpatialDimPlot(left5, label = F, label.size = 5,crop =T , repel = T,pt.size.factor = 1.5,cols = ,group.by = )


##day 15
ima<-Read10X_Image("/Users/ltyao/Desktop/Visvium fx/day15/spatial")
ima@coordinates[["tissue"]] <- as.integer(ima@coordinates[["tissue"]])
ima@coordinates[["row"]] <- as.integer(ima@coordinates[["row"]])
ima@coordinates[["col"]] <- as.integer(ima@coordinates[["col"]])
ima@coordinates[["imagerow"]] <- as.integer(ima@coordinates[["imagerow"]])
ima@coordinates[["imagecol"]] <- as.integer(ima@coordinates[["imagecol"]])

#slice 可以自己起名
pbmcsca15<-Load10X_Spatial(
"/Users/ltyao/Desktop/Visvium fx/day15/spatial/",
filename = "filtered_feature_bc_matrix.h5",
assay = "Spatial",
slice = "day15",
filter.matrix = TRUE,
to.upper = FALSE,
image = ima,
)

#pbmcsca5 <- SCTransform(pbmcsca5, assay = "Spatial", verbose = FALSE)
#pbmcsca5 <- CellCycleScoring(object = pbmcsca5, s.features = s.genes, g2m.features = g2m.genes, set.ident = F)

pbmcsca15[['imagerow']] <- pbmcsca15@images[["day15"]]@coordinates[["imagerow"]]
pbmcsca15[['imagecol']] <- pbmcsca15@images[["day15"]]@coordinates[["imagecol"]]
left15 <- subset(pbmcsca15, imagecol > 0 & imagecol < 2500)
right15 <- subset(pbmcsca15, imagecol > 0 & imagecol < 2500, invert = TRUE)
left15$merge<-"left15"
left15$day<-"day15"
right15$merge<-"right15"
right15$day<-"day15"

SpatialDimPlot(pbmcsca, label = F, label.size = 5,crop =T , repel = T,pt.size.factor = 1.5,cols = ,group.by = )

save.image("/Users/ltyao/scRNA_seq_file/day0_5_15.RData")
###安装最新版seurat读取
install.packages("Seurat")
### restart Rstudio
library("Seurat")
load("/Users/ltyao/scRNA_seq_file/day0_5_15.RData")

pbmcsca<-merge(left0,list(right0,left5,right5,left15,right15))
pbmcsca$merge<-factor(pbmcsca$merge,levels=c("left0","right0","left5","right5","left15","right15"))
# "nCount_Spatial"
VlnPlot(pbmcsca,c("nFeature_Spatial"),pt.size = 0,split.by = )

library(harmony)
DefaultAssay(pbmcsca) <- "Spatial"
pbmcsca <- NormalizeData(object = pbmcsca, normalization.method = "LogNormalize", scale.factor = 10000)
pbmcsca <- FindVariableFeatures(pbmcsca, selection.method = "vst", nfeatures = 3000)

##cell cycle
pbmcsca <- JoinLayers(pbmcsca)
cc.genes <- readLines ("/Users/ltyao/scRNA_seq_file/cell_cycle_vignette_files/regev_lab_cell_cycle_genes_mouse.txt")
s.genes <- cc.genes[1:43]
g2m.genes <- cc.genes[44:97]
pbmcsca <- CellCycleScoring(object = pbmcsca, s.features = s.genes, g2m.features = g2m.genes, set.ident = F)

all.genes <- rownames(pbmcsca)
pbmcsca <- ScaleData(pbmcsca, verbose = T,vars.to.regress =c("S.Score","G2M.Score"),features = )#  c("S.Score","G2M.Score").  c("S.Score","G2M.Score","percent.mt")
pbmcsca <- RunPCA(pbmcsca, npcs = 100, verbose = T)
pbmcsca <- RunHarmony(pbmcsca, group.by.vars = c("merge"),assay.use= )
pbmcsca <- RunUMAP(pbmcsca, reduction = "harmony", dims = 1:80)
pbmcsca <- FindNeighbors(pbmcsca, reduction = "harmony", dims = 1:80)
pbmcsca <- FindClusters(pbmcsca, resolution = 1.2)
#pbmcsca$orig.ident<-factor(pbmcsca$orig.ident, levels = c("matrigel","bmp2","bmp2palo"))
#pbmcsca$merge<-pbmcsca$orig.ident
#reduction = "pca"
#pbmcsca$merge<-factor(pbmcsca$merge, levels = c("day0","day7","day60"))
#Idents(mlin)<-"seurat_clusters"
#Idents(pbmcsca)<-"celltype"
pbmcsca$day<-factor(pbmcsca$day,levels = c("day0","day5","day15"))
DimPlot(pbmcsca,label = T,label.size = 5, reduction=,repel = F,group.by = "seurat_clusters")
DimPlot(tree,label = T,label.size = 5, reduction=,repel = T,split.by = "day")
DimPlot(pbmcsca,label = T,label.size = 5, reduction=,repel = T,cols =colors )
pbmcsca<-spatial
left0<-subset(tree,subset=merge=="left0")
SpatialDimPlot(left0, label = F, label.size = 5,crop = F , repel = T,pt.size.factor = 1.8,
               cols = ,group.by = ,image.scale = "lowres",shape = 22)
DefaultAssay(pbmcsca5)<-"Spatial"
SpatialFeaturePlot(pbmcsca0, features = c("nFeature_Spatial"),slot = ,crop = T,ncol = ,alpha = ,
                   min.cutoff =  ,pt.size.factor =2 )# + theme(legend.position = "right")
FeaturePlot(tree, features = c("Bmp2"), reduction = , min.cutoff ="q9",cols =,slot =,
            split.by = "day"   ,pt.size = 0.1)
VlnPlot(tree,"Chrna1",split.by =  ,pt.size = 0)

left0 <- subset(left0, subset = nFeature_Spatial > 300)
###tree的顺序
a<-table(tree@active.ident)

cells <- CellsByIdentities(left0, idents = rownames(a)) ##c(0:25)
p <- SpatialDimPlot(left0,
                    cells.highlight = cells[setdiff(names(cells), "NA")],
                    cols.highlight = c("#FFFF00","grey50"), facet.highlight = T, 
                    crop=T,combine = T,ncol = 5) + NoLegend()+ theme(aspect.ratio = myratio)

p


#subset
left0<-subset(pbmcsca,subset=day=="day0")
left0<-subset(tree,subset=day=="day5")
SpatialFeaturePlot(left0, features = c("Ccn1"),slot = ,crop = T,min.cutoff = "q9" ,
                   pt.size.factor = 8,)& theme(aspect.ratio = myratio)# + theme(legend.position = "right")
SpatialFeaturePlot(pbmcsca, features = c("Ccn1"),slot = ,crop =F ,min.cutoff = "q9" ,
                   pt.size.factor = 8,alpha = ) & theme(aspect.ratio = myratio) &
  scale_fill_gradientn(limits=c(0, 3), colours=SpatialColors(n=100))

####feature with legend limit
DefaultAssay(pbmcsca5)<-"Spatial"  #SCT Spatial
SpatialFeaturePlot(pbmcsca0, features = c("nCount_Spatial"),slot = ,crop = T, min.cutoff = ,
                   pt.size.factor = 2.5,alpha =0,image.alpha = ) & scale_fill_gradientn(limits=c(0, 100000), colours=SpatialColors(n=100))# & theme(aspect.ratio = myratio) #, colours=SpatialColors(n=100)
left0$pseudotime<-HSMM_day0$Pseudotime
SpatialFeaturePlot(left0, features = c("MIF"),slot = ,crop = T,min.cutoff = ,
                   pt.size.factor =3 ,alpha =,image.alpha = 0.5 )#& theme(aspect.ratio = myratio)# + scale_fill_gradientn(limits=c(0, 2), colours=SpatialColors(n=100)) #, colours=SpatialColors(n=100)
VlnPlot(pbmcsca,c("Ccn1","Piezo1","Piezo2","Yap1","Wwtr1","Scx"),split.by = "day",pt.size = 0.5,ncol = 3)& theme(axis.title.x = element_blank(),axis.text.x = element_blank(),plot.title = element_text(size = 12),axis.title.y = element_blank())
VlnPlot(pbmcsca,"Bmp2",split.by = "day",pt.size = 0,cols =c("#f9766e","#01ba38","#619dff") )
VlnPlot(tree,"Bmp2",split.by = ,pt.size = 0,cols = )

SpatialColors <- colorRampPalette(colors = rev(x = brewer.pal(n = 11, name = "Spectral")))
#SpatialColors <- colorRampPalette(c("lightblue","white", "darkred"))

###截取一小块             imagecol 左右调整，imagerow 上下调整
left0_sub <- subset(left0, imagecol > 9000 & imagecol < 10000 & imagerow>17000 & imagerow<20000)
##HD
left0_sub@images
coord <- GetTissueCoordinates(object = left0_sub@images$slice1@boundaries$centroids)
# calculate the aspect ratio of rows to columns
myratioHD <- (max(coord$x) - min(coord$x)) / (max(coord$y) - min(coord$y))
SpatialDimPlot(left0_sub, crop = TRUE, pt.size.factor = 30,label = T,label.size = 3,
               cols =colors ,stroke = 0.2,alpha =1  ) + theme(aspect.ratio = myratioHD) #colors
DimPlot(left0_sub,label = T,label.size = 5, reduction=,repel = T,split.by = "day")
sub<-subset(left0_sub,idents=c(5,17,1,4,3,11),invert=T)
SpatialDimPlot(left0, crop = TRUE, pt.size.factor = ,label = T,label.size = 3,
               cols = ,stroke = 0.2,alpha =1 )# + theme(aspect.ratio = myratioHD) +NoLegend() #colors

###完美crop###
##HD
left0@images
coord <- GetTissueCoordinates(object = left0@images$slice1@boundaries$centroids)
# calculate the aspect ratio of rows to columns
myratio <- (max(coord$x) - min(coord$x)) / (max(coord$y) - min(coord$y))

##visium old
left0@images
coord <- GetTissueCoordinates(object = left0@images$day15.6)
# calculate the aspect ratio of rows to columns
myratio <- (max(coord$imagerow) - min(coord$imagerow)) / (max(coord$imagecol) - min(coord$imagecol))

# force the image into the right aspect ratio
left0<-subset(pbmcsca,subset=day=="day5")
SpatialDimPlot(left0, crop = T, pt.size.factor =7 ,label = F,label.size = 3,
               cols = colors,stroke = 0.2,image.alpha = 0.5 ,group.by = ) & theme(aspect.ratio = myratio)# +NoLegend() #colors
SpatialDimPlot(left5, crop = TRUE, pt.size.factor = 5,label = F,label.size = 3,
               cols = ,stroke = 0.2,image.alpha =,group.by = "Phase"  ) + theme(aspect.ratio = myratio)
# 23,3,11,15,20,5,17
# 8,25,19,22,14,18,7,10,13
# 0,9,24,12,2,16,21,26,6,1,4
left0<-subset(tree,subset=merge=="right15")
sub<-subset(left0,idents=c(8,25,19,22,14,18,7,10,13))
SpatialDimPlot(sub, crop = T, pt.size.factor = 6,label = F,label.size = 5,
               cols =colors ,stroke = 0.4,group.by =,interactive = ,repel = T,image.alpha = 0.8) & theme(aspect.ratio = myratio) +NoLegend() #colors

##cellselector 根据loupe location
a<-read.csv("/Users/ltyao/Desktop/fx visium loupe select cell/peri left0.csv")
cell_list<-a$Barcode.1
new_list <- character()#创建一个空字符串
#循环每一个字符串元素，查看是否为空值
for (i in (1:length(cell_list))){
  if (cell_list[i] != ""){
    append_gene <- as.character(cell_list[i])#如果不是空值，所添加的元素
    new_list <- append(new_list,append_gene)#在新字符串中逐个添加元素
  }
}
new_list
left0<-tree
left0$cells<-colnames(left0)
Idents(left0)<-"cells"
sub1<-subset(left0,idents=new_list)

Idents(sub1)<-"seurat_clusters"
sub<-subset(sub1,idents=c(8,25,19,14,18,7,10,13))
SpatialDimPlot(sub, crop = TRUE, pt.size.factor = 6,label = F,label.size = 3,
               cols = ,stroke = 0.4,group.by =,interactive = ) & theme(aspect.ratio = myratio)# +NoLegend() #colors

write.csv(left0[[]],"a.csv")

a+b+plot_layout(ncol = 2)
c+d+e+f+plot_layout(ncol = 4)


left0<-subset(tree,subset=merge=="left0")
left0<-subset(tree,subset=merge=="left5")
cells <- CellsByIdentities(left0, idents = c(10,13,14,18,19,22,25,7,8)) ##c(0:25)
SpatialDimPlot(left0,cells.highlight = cells[setdiff(names(cells), "NA")],
               cols.highlight = c(colors[1:8],"black","grey50"),
               crop=T,pt.size.factor = 5,alpha = ) + theme(aspect.ratio = myratioHD)
###set1的颜色
colors<-brewer.pal(9,'Set1')
"#E41A1C", "#377EB8", "#4DAF4A", "#984EA3", "#FF7F00" ,"#FFFF33", "#A65628", "#F781BF","black","grey50"
names(colors) <- Idents(tree) %>% levels()

###left0没有"#FF7F00", "#A65628"
SpatialDimPlot(left0,cells.highlight = cells[setdiff(names(cells), "NA")],
               cols.highlight = c("#E41A1C", "#377EB8", "#4DAF4A", "#984EA3", "#FFFF33", "#F781BF","black","grey50"),
               crop=T,pt.size.factor = 5,alpha = ) + NoLegend()+ theme(aspect.ratio = myratioHD)

cells <- CellsByIdentities(pbmcsca, idents = c(18)) ##c(0:25)
DimPlot(pbmcsca,cells.highlight = cells[setdiff(names(cells), "NA")],
        cols.highlight = c("#FFFF00","grey50"),split.by = "merge") + NoLegend()

gg <- list()
for (i in c(23,3,11,15,20,5,17)){
  cells <- CellsByIdentities(left0, idents = i) 
  gg[[i]]<-SpatialDimPlot(left0,cells.highlight = cells[setdiff(names(cells), "NA")],
                 cols.highlight = c("#FFFF00","grey50"),
                 crop=T,pt.size.factor = 4) + NoLegend()+ theme(aspect.ratio = myratio)
}

#  +gg[[10]]+gg[[13]]
gg[[23]]+gg[[3]]+gg[[11]]+gg[[15]]+gg[[20]]+gg[5]+gg[[17]]+plot_layout(ncol = 7)

###Banksy 好像没有单纯harmony好
library(Banksy)
library(SeuratWrappers)
library(SummarizedExperiment)
library(SpatialExperiment)
library(Seurat)
library(scran)
library(data.table)
library(harmony)

library(scater)
library(cowplot)
library(ggplot2)

load("/Users/ltyao/scRNA_seq_file/fx_visium_all_pbmcsca.Robj")
pbmcsca <- JoinLayers(pbmcsca)
pbmcsca <- NormalizeData(object = pbmcsca, normalization.method = "LogNormalize", scale.factor = 10000)
pbmcsca <- FindVariableFeatures(pbmcsca, selection.method = "vst", nfeatures = 2000)
pbmcsca <- ScaleData(pbmcsca)

plot(FetchData(pbmcsca, c('sdimx', 'sdimy')), col = factor(pbmcsca$orig.ident))

sdimx <- 'imagerow'
sdimy <- 'imagecol'
pbmcsca <- RunBanksy(pbmcsca, lambda = 0.2, assay = 'Spatial', slot = 'data',
                 dimx = sdimx, dimy = sdimy, features = 'all',
                 group = 'merge', split.scale = FALSE, k_geom = 6)
pbmcsca <- RunPCA(pbmcsca, assay = 'BANKSY', features = rownames(pbmcsca), npcs = 50)
pbmcsca <- RunHarmony(pbmcsca, group.by.vars='merge')

pbmcsca <- RunUMAP(pbmcsca, dims = 1:20, reduction = 'harmony')
pbmcsca <- FindNeighbors(pbmcsca, dims = 1:20, reduction = 'harmony')
pbmcsca <- FindClusters(pbmcsca, resolution = 0.4)
DimPlot(pbmcsca, pt.size = 0.25, label = TRUE, label.size = 3, cols = )
DimPlot(pbmcsca, pt.size = 0.25, label = TRUE, label.size = 3, cols = ,split.by = "day")

banpbmcsca<-pbmcsca
left0<-subset(pbmcsca,subset=merge=="left15")
SpatialDimPlot(left0, label = T, label.size = 5,crop = F , repel = T,pt.size.factor = 1.8,
               cols = ,group.by = ,image.scale = "lowres",)

cells <- CellsByIdentities(left0, idents = c(16))
p <- SpatialDimPlot(left0,
                    cells.highlight = cells[setdiff(names(cells), "NA")],
                    cols.highlight = c("#FFFF00", "grey50"), facet.highlight = T, 
                    crop=F,combine = T
) + NoLegend()
p
####end###


##day 5 day 15 merge. 暂时没用
pbmcsca<-merge(spatial5,spatial15)
SpatialDimPlot(pbmcsca, crop = FALSE, label = TRUE, pt.size.factor = , label.size = 3)
DefaultAssay(pbmcsca) <- "Spatial"
pbmcsca <- NormalizeData(object = pbmcsca, normalization.method = "LogNormalize", scale.factor = 10000)
pbmcsca <- FindVariableFeatures(pbmcsca, selection.method = "vst", nfeatures = 3000)
all.genes <- rownames(pbmcsca)
pbmcsca <- ScaleData(pbmcsca, verbose = T,vars.to.regress =c("S.Score","G2M.Score"),features = )#  c("S.Score","G2M.Score").  c("S.Score","G2M.Score","percent.mt")
pbmcsca <- RunPCA(pbmcsca, npcs = 50, verbose = T)
pbmcsca <- RunHarmony(pbmcsca, group.by.vars = c("merge"),assay.use= )
pbmcsca <- RunUMAP(pbmcsca, reduction = "harmony", dims = 1:30)
pbmcsca <- FindNeighbors(pbmcsca, reduction = "harmony", dims = 1:30)
pbmcsca <- FindClusters(pbmcsca, resolution = 0.5)
#pbmcsca$orig.ident<-factor(pbmcsca$orig.ident, levels = c("matrigel","bmp2","bmp2palo"))
#pbmcsca$merge<-pbmcsca$orig.ident
#reduction = "pca"
#pbmcsca$merge<-factor(pbmcsca$merge, levels = c("day0","day7","day60"))
#Idents(mlin)<-"seurat_clusters"
#Idents(pbmcsca)<-"celltype"
DimPlot(pbmcsca,label = T,label.size = 5, reduction=,repel = T)
visvium_all<-pbmcsca

pbmcsca<-merge(left5,right5)
library(harmony)
DefaultAssay(pbmcsca) <- "Spatial"
pbmcsca <- NormalizeData(object = pbmcsca, normalization.method = "LogNormalize", scale.factor = 10000)
pbmcsca <- FindVariableFeatures(pbmcsca, selection.method = "vst", nfeatures = 3000)
all.genes <- rownames(pbmcsca)
pbmcsca <- ScaleData(pbmcsca, verbose = T,vars.to.regress =c("S.Score","G2M.Score"),features = )#  c("S.Score","G2M.Score").  c("S.Score","G2M.Score","percent.mt")
#DefaultAssay(pbmcsca5)<-"SCT"
pbmcsca5 <- CellCycleScoring(object = pbmcsca5, s.features = s.genes, g2m.features = g2m.genes, set.ident = F)
#cell cycle
#mouse
cc.genes <- readLines ("/Users/ltyao/scRNA_seq_file/cell_cycle_vignette_files/regev_lab_cell_cycle_genes_mouse.txt")
s.genes <- cc.genes[1:43]
g2m.genes <- cc.genes[44:97]
pbmcsca5 <- CellCycleScoring(object = pbmcsca5, s.features = s.genes, g2m.features = g2m.genes, set.ident = F)
spatial5<-pbmcsca5
spatial5[['imagerow']] <- spatial5@images[["tissue_lowres_image.png"]]@coordinates[["imagerow"]]
spatial5[['imagecol']] <- spatial5@images[["tissue_lowres_image.png"]]@coordinates[["imagecol"]]
left5 <- subset(spatial5, imagecol > 0 & imagecol < 2500)
right5 <- subset(spatial5, imagecol > 0 & imagecol < 2500, invert = TRUE)
left5$merge<-"left5"
left5$day<-"day5"
right5$merge<-"right5"
right5$day<-"day5"
pbmcsca<-merge(left5,right5)
library(harmony)
DefaultAssay(pbmcsca) <- "Spatial"
pbmcsca <- NormalizeData(object = pbmcsca, normalization.method = "LogNormalize", scale.factor = 10000)
pbmcsca <- FindVariableFeatures(pbmcsca, selection.method = "vst", nfeatures = 3000)
all.genes <- rownames(pbmcsca)
pbmcsca <- ScaleData(pbmcsca, verbose = T,vars.to.regress =c("S.Score","G2M.Score"),features = )#  c("S.Score","G2M.Score").  c("S.Score","G2M.Score","percent.mt")
pbmcsca <- RunPCA(pbmcsca, npcs = 50, verbose = T)
pbmcsca <- RunHarmony(pbmcsca, group.by.vars = c("merge"),assay.use= )
pbmcsca <- RunUMAP(pbmcsca, reduction = "harmony", dims = 1:20)
pbmcsca <- FindNeighbors(pbmcsca, reduction = "harmony", dims = 1:20)
pbmcsca <- FindClusters(pbmcsca, resolution = 0.5)
#pbmcsca$orig.ident<-factor(pbmcsca$orig.ident, levels = c("matrigel","bmp2","bmp2palo"))
#pbmcsca$merge<-pbmcsca$orig.ident
#reduction = "pca"
#pbmcsca$merge<-factor(pbmcsca$merge, levels = c("day0","day7","day60"))
#Idents(mlin)<-"seurat_clusters"
#Idents(pbmcsca)<-"celltype"
DimPlot(pbmcsca,label = T,label.size = 5, reduction=,repel = T)
spatial5<-pbmcsca



plot <- SpatialDimPlot(left0, label = T, label.size = 5,crop = FALSE, repel = T,pt.size.factor = 1.5,cols = ,group.by = )

# Follow instructions in the terminal to select points
cells.located<-CellSelector(pbmcsca@images[["day0"]]@coordinates %>%  ggplot(aes(x = imagerow, y = imagecol)) + geom_point())
cells.located


